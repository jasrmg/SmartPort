# Generated by Django 5.2.3 on 2025-10-14 02:47

import django.db.models.deletion
import smartportApp.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('cargo_id', models.AutoField(primary_key=True, serialize=False)),
                ('item_number', models.PositiveIntegerField()),
                ('description', models.TextField()),
                ('quantity', models.PositiveIntegerField()),
                ('value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=10)),
                ('additional_info', models.TextField(blank=True, null=True)),
                ('hs_code', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'ordering': ['item_number'],
            },
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('port_id', models.AutoField(primary_key=True, serialize=False)),
                ('port_name', models.CharField(max_length=100)),
                ('port_code', models.CharField(max_length=10, unique=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('port_description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CargoDelivery',
            fields=[
                ('cargo_delivery_id', models.AutoField(primary_key=True, serialize=False)),
                ('confirmed_at', models.DateTimeField(auto_now_add=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('cargo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='delivery', to='smartportApp.cargo')),
                ('confirmed_by', models.ForeignKey(limit_choices_to={'role': 'shipper'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='IncidentReport',
            fields=[
                ('incident_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=255)),
                ('incident_datetime', models.DateTimeField()),
                ('impact_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('resolved', 'Resolved')], default='pending', max_length=15)),
                ('incident_type', models.CharField(choices=[('oil_spill', 'Oil Spill'), ('collision', 'Collision'), ('grounding', 'Grounding'), ('fire', 'Fire'), ('capsizing', 'Capsizing'), ('slip_trip_fall', 'Slip, Trip, or Fall'), ('human_error', 'Human Error'), ('other', 'Other')], max_length=30)),
                ('other_incident_type', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='IncidentImage',
            fields=[
                ('image_id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='incident_images/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.userprofile')),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='smartportApp.incidentreport')),
            ],
        ),
        migrations.CreateModel(
            name='IncidentResolution',
            fields=[
                ('resolution_id', models.AutoField(primary_key=True, serialize=False)),
                ('resolution_report', models.TextField()),
                ('resolution_date', models.DateTimeField()),
                ('incident', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resolution', to='smartportApp.incidentreport')),
                ('resolved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='MasterManifest',
            fields=[
                ('mastermanifest_id', models.AutoField(primary_key=True, serialize=False)),
                ('mastermanifest_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('generated', 'Generated'), ('finalized', 'Finalized')], default='generated', max_length=20)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('link_url', models.CharField(blank=True, max_length=500)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('triggered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='triggered_notifications', to='accounts.userprofile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='accounts.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubManifest',
            fields=[
                ('submanifest_id', models.AutoField(primary_key=True, serialize=False)),
                ('submanifest_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('consignee_name', models.CharField(max_length=255)),
                ('consignee_email', models.EmailField(max_length=254)),
                ('consignee_address', models.TextField()),
                ('consignor_name', models.CharField(max_length=255)),
                ('consignor_email', models.EmailField(max_length=254)),
                ('consignor_address', models.TextField()),
                ('container_no', models.CharField(max_length=11)),
                ('seal_no', models.CharField(max_length=15)),
                ('bill_of_lading_no', models.CharField(max_length=17)),
                ('handling_instruction', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending_admin', 'Pending Admin Review'), ('rejected_by_admin', 'Rejected by Admin'), ('pending_customs', 'Pending Customs Review'), ('rejected_by_customs', 'Rejected by Customs'), ('approved', 'Approved')], default='pending_admin', max_length=30)),
                ('admin_note', models.TextField(blank=True, null=True)),
                ('customs_note', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin_rejection_count', models.PositiveIntegerField(default=0)),
                ('customs_rejection_count', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.userprofile')),
                ('master_manifest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='smartportApp.mastermanifest')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_submanifests', to='accounts.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('document_id', models.AutoField(primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('bill_of_lading', 'Bill of Lading'), ('invoice', 'Invoice'), ('packing_list', 'Packing List'), ('certificate_of_origin', 'Certificate Of Origin'), ('other', 'Other')], max_length=50)),
                ('file', models.FileField(upload_to=smartportApp.models.document_upload_path)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('original_filename', models.CharField(blank=True, max_length=255)),
                ('custom_filename', models.CharField(blank=True, max_length=255)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.userprofile')),
                ('submanifest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='smartportApp.submanifest')),
            ],
        ),
        migrations.CreateModel(
            name='CustomClearance',
            fields=[
                ('clearance_id', models.AutoField(primary_key=True, serialize=False)),
                ('clearance_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('clearance_status', models.CharField(choices=[('pending', 'Pending'), ('cleared', 'Cleared'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('inspection_date', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True)),
                ('clearance_file', models.FileField(blank=True, null=True, upload_to='custom_clearances/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_clearances', to='accounts.userprofile')),
                ('reviewed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_clearances', to='accounts.userprofile')),
                ('submanifest', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='custom_clearance', to='smartportApp.submanifest')),
            ],
        ),
        migrations.AddField(
            model_name='cargo',
            name='submanifest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargo_items', to='smartportApp.submanifest'),
        ),
        migrations.CreateModel(
            name='Vessel',
            fields=[
                ('vessel_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('imo', models.CharField(max_length=20, unique=True)),
                ('vessel_type', models.CharField(choices=[('container', 'Container'), ('ro_ro', 'Ro-Ro'), ('general_cargo', 'General Cargo')], default='general_cargo', max_length=30)),
                ('status', models.CharField(choices=[('available', 'Available'), ('assigned', 'Assigned'), ('maintenance', 'Under Maintenance')], default='available', max_length=20)),
                ('capacity', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_vessels', to='accounts.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='mastermanifest',
            name='vessel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smartportApp.vessel'),
        ),
        migrations.AddField(
            model_name='incidentreport',
            name='vessel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='smartportApp.vessel'),
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('activity_log_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('assigned', 'Assigned'), ('status_update', 'Status Update'), ('delayed', 'Delayed'), ('arrived', 'Arrived'), ('note', 'Manual Note'), ('created', 'Created'), ('incident', 'Incident'), ('submanifest_approved', 'Submanifest Approved')], max_length=20)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activity_logs', to='accounts.userprofile')),
                ('vessel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to='smartportApp.vessel')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Voyage',
            fields=[
                ('voyage_id', models.AutoField(primary_key=True, serialize=False)),
                ('departure_date', models.DateTimeField()),
                ('eta', models.DateTimeField(blank=True, null=True)),
                ('arrival_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('arrived', 'Arrived'), ('in_transit', 'In Transit'), ('assigned', 'Assigned'), ('delayed', 'Delayed')], default='assigned', max_length=20)),
                ('voyage_number', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('arrival_port', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='arrivals', to='smartportApp.port')),
                ('departure_port', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='departures', to='smartportApp.port')),
                ('vessel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voyages', to='smartportApp.vessel')),
            ],
        ),
        migrations.AddField(
            model_name='submanifest',
            name='voyage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smartportApp.voyage'),
        ),
        migrations.AddField(
            model_name='mastermanifest',
            name='voyage',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='master_manifest', to='smartportApp.voyage'),
        ),
        migrations.CreateModel(
            name='VoyageReport',
            fields=[
                ('voyage_report_id', models.AutoField(primary_key=True, serialize=False)),
                ('voyage_report', models.TextField()),
                ('delayed_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='voyage_reports', to='accounts.userprofile')),
                ('voyage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='smartportApp.voyage')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='cargo',
            unique_together={('submanifest', 'item_number')},
        ),
    ]
